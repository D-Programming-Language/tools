In rdmd `--eval` and `--loop` the last statement without effect will be printed if prefixed with `@`

`--eval` and `--loop` are two convenience features of `rdmd` that allow quick experimentation with D code.

$(CONSOLE
rdmd --eval='"hello"'
$(RED Error): Error: found } when expecting ; following statement
rdmd --eval='"hello";'
$(RED Error): "hello" has no effect
rdmd --eval='@"hello"'
hello
)

A few more examples of `rdmd` in action:

$(H4 Use `rdmd` as your calculator)

$(CONSOLE
rdmd --eval="@2 + 2"
4
)

$(CONSOLE
rdmd --eval="@2.pow(4)"
16
)

$(CONSOLE
rdmd --eval="auto a = 10; auto b = [a, a + 1]; @b"
[10, 11]
)

$(H4 Select the first column in a CSV file)

$(CONSOLE
rdmd --loop='@line.splitter(",").take(1)'
16
)

$(H4 Use `rdmd` as drop-in for Unix tools)

$(CONSOLE
seq 5 | rdmd --loop='@stdin.byLine.drop(2).joiner(newline)'
4
5
)
